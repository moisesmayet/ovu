# Generated by Django 3.0.10 on 2020-09-29 18:33

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Algoritmo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('formula', tinymce.models.HTMLField()),
                ('unidad_medida', models.CharField(default='Porcentaje', max_length=100)),
                ('metodologia', models.TextField(blank=True, max_length=650, null=True, verbose_name='Metodología de cálculo\xa0')),
                ('descripcion', models.TextField(blank=True, max_length=255, null=True, verbose_name='Descripción')),
            ],
            options={
                'ordering': ['formula'],
            },
        ),
        migrations.CreateModel(
            name='Componente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('codigo', models.CharField(max_length=5, verbose_name='Código')),
                ('descripcion', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Descripción')),
                ('eliminable', models.BooleanField(default=True, editable=False)),
                ('visible', models.BooleanField(default=True, help_text='¿Se puede visualizar este componente?')),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Corte',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corte_inicio', models.DateField(verbose_name='Fecha de inicio del corte')),
                ('corte_cierre', models.DateField(verbose_name='Fecha de cierre del corte')),
                ('periodo', models.CharField(choices=[('Bimestres', (('b11', 'Bimestre 1-1'), ('b12', 'Bimestre 1-2')))], default='b11', max_length=3)),
                ('visible', models.BooleanField(default=True, help_text='¿Se puede visualizar este corte?')),
                ('nombre', models.CharField(blank=True, max_length=100, null=True)),
                ('descripcion', models.TextField(blank=True, max_length=255, null=True, verbose_name='Descripción')),
            ],
            options={
                'ordering': ['corte_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Indicador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('codigo', models.CharField(max_length=10)),
                ('descripcion', models.TextField(blank=True, max_length=255, null=True, verbose_name='Descripción')),
                ('definicion', models.TextField(blank=True, max_length=255, null=True, verbose_name='Definición')),
                ('eliminable', models.BooleanField(default=False, help_text='¿Se puede eliminar este indicador?')),
                ('visible', models.BooleanField(default=False, help_text='¿Se puede visualizar este indicador?')),
                ('cobertura_geografica', models.CharField(choices=[('Na', 'Nacional'), ('Inter', 'Internacional')], default='Na', max_length=5, verbose_name='Cobertura geográfica')),
                ('periodicidad', models.CharField(choices=[('M', 'Mensual'), ('BM', 'Bimensual'), ('BT', 'Bimestral'), ('A', 'Anual'), ('CU', 'Cuatrimestral'), ('TR', 'Trimestral'), ('CT', 'Cuatrimestral/Trimestral'), ('P', 'Pendiente')], default='A', max_length=2)),
                ('lectura', models.TextField(default='Pendiente la información', verbose_name='Lectura del Indicador')),
                ('observaciones', tinymce.models.HTMLField(blank=True, null=True)),
                ('componente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='indicadores', related_query_name='indicador', to='core.Componente')),
            ],
            options={
                'verbose_name_plural': 'Indicadores',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Ovu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(blank=True, max_length=15, null=True)),
                ('definicion', models.TextField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Termino',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('N', 'Numerador'), ('D', 'Denominador'), ('C', 'Constante')], default='N', max_length=1, verbose_name='Tipo')),
                ('variable', tinymce.models.HTMLField(blank=True, max_length=25, null=True)),
                ('definicion', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Definición')),
                ('algoritmo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terminos', to='core.Algoritmo')),
            ],
            options={
                'ordering': ['tipo'],
            },
        ),
        migrations.CreateModel(
            name='Segregacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parametro', models.CharField(help_text='Nombre del parámetro para segregar', max_length=50, verbose_name='Parámetro')),
                ('parametro_opcional', models.CharField(blank=True, help_text='Nombre del parámetro opcional para segregar', max_length=50, null=True, verbose_name='Parámetro opcional')),
                ('indicador', models.ManyToManyField(limit_choices_to={'componente__visible': True}, related_name='segregacion', to='core.Indicador')),
            ],
            options={
                'verbose_name': 'Segregación',
                'verbose_name_plural': 'Segregaciones',
            },
        ),
        migrations.CreateModel(
            name='Referencia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institucion', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Institución')),
                ('indicador', models.ManyToManyField(blank=True, related_name='referencias', to='core.Indicador')),
            ],
        ),
        migrations.CreateModel(
            name='Objetivos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objetivo', models.CharField(max_length=100)),
                ('ovu', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Ovu')),
            ],
        ),
        migrations.CreateModel(
            name='FuenteInformacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuente_informacion', models.CharField(max_length=50, verbose_name='Fuente de Información')),
                ('web', models.URLField(blank=True, null=True, verbose_name='Disponible en la web')),
                ('registrado', models.DateField(default=django.utils.timezone.now)),
                ('indicador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='fuentes_informacion', to='core.Indicador')),
                ('termino', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Termino')),
            ],
            options={
                'verbose_name': 'Fuentes de información',
                'verbose_name_plural': 'Fuentes de información',
            },
        ),
        migrations.AddField(
            model_name='algoritmo',
            name='indicador',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='algoritmos', related_query_name='algoritmo', to='core.Indicador'),
        ),
        migrations.CreateModel(
            name='Dato',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=11)),
                ('corte', models.ForeignKey(limit_choices_to={'visible': True}, on_delete=django.db.models.deletion.PROTECT, to='core.Corte')),
                ('indicador', models.ForeignKey(limit_choices_to={'visible': True}, on_delete=django.db.models.deletion.PROTECT, related_name='datos', to='core.Indicador')),
                ('segregacion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='datos', to='core.Segregacion')),
            ],
            options={
                'unique_together': {('segregacion', 'corte')},
            },
        ),
    ]
